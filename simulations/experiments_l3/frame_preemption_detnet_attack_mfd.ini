[General]
network = DetnetTestScenarioAttackDiffserv

check-signals = true
record-eventlog = true
debug-on-errors = true
result-dir = frame_preemption_detnet_attack_mfd
sim-time-limit = 1.1s


# debug
**.displayAddresses = true
**.verbose = true
**.registerProtocol = true

**.*.clock.clockRate = "1us"

#*.configurator.config = xmldoc("xml/ipassign.xml")
#**.arp.typename = "GlobalArp"

#**.**.eth[*].etherEncapE.useSNAP = true
**.**.eth[*].etherEncap.useSNAP = true
#**.**.eth.etherEncap.useSNAP = true

#**.priority2.eth.mac.txQueueLimit = 100000

#**.switchA.numPcapRecorders = 1
#**.switchA.pcapRecorder[0].verbose = true
#**.switchA.pcapRecorder[*].alwaysFlush = true
#**.switchA.pcapRecorder[0].dumpProtocols = "ethernetmac ppp ieee80211mac ipv4"

# Switches
#**.switch*.processingDelay[*].delay = 5us

**.switch*.eth[*].processingDelay.delay= 5us

# Modules with xml inputs
########################################### Strict priority with detnet extensions and mfd dropper #################################################
**.filteringDatabase.database = xmldoc("frame_preemption_detnet_attack_mfd_forwarding.xml", "/filteringDatabases/")
**.filteringDatabase.cycle = xmldoc("frame_preemption_detnet_attack_mfd_schedule.xml", "/schedule/")
**.gateController.initialSchedule = xmldoc("frame_preemption_detnet_attack_mfd_schedule.xml")
#**.priority0.trafGenSchedApp.initialSchedule = xmldoc("frame_preemption_detnet_attack_mfd/frame_preemption_detnet_attack_mfd_schedule.xml")
#**.priority1.trafGenSchedApp.initialSchedule = xmldoc("frame_preemption_detnet_attack_mfd/frame_preemption_detnet_attack_mfd_schedule.xml")
#**.priority2.trafGenSchedApp.initialSchedule = xmldoc("frame_preemption_detnet_attack_mfd/frame_preemption_detnet_attack_mfd_schedule.xml")
####################################################################################################################################################

**.gateController.enableHoldAndRelease = false
**.switch*.eth[*].queuing.tsAlgorithms[0].typename = "StrictPriority"
**.switch*.eth[*].queuing.tsAlgorithms[1].typename = "StrictPriority"
**.switch*.eth[*].queuing.tsAlgorithms[2].typename = "StrictPriority"
**.switch*.eth[*].queuing.tsAlgorithms[3].typename = "StrictPriority"
**.switch*.eth[*].queuing.tsAlgorithms[4].typename = "StrictPriority"
**.switch*.eth[*].queuing.tsAlgorithms[5].typename = "StrictPriority"
**.switch*.eth[*].queuing.tsAlgorithms[6].typename = "StrictPriority"
**.switch*.eth[*].queuing.tsAlgorithms[7].typename = "StrictPriority"

########################################### Dropper Module ##########################################################################################
#Red Dropper
#**.switch*.eth[*].queuing.dropper.typename="RedDropper"
#**.switch*.eth[*].queuing.dropper.minths="10"
#**.switch*.eth[*].queuing.dropper.maxths="25"
##**.switch*.eth[*].queuing.redDropper.minths="10"
##**.switch*.eth[*].queuing.redDropper.maxths="25"

#Mfd Dropper
**.switch*.eth[*].queuing.dropper.typename= "MfdDropper"
**.switch*.eth[*].queuing.dropper.DetnetBandwidthReservation= 0.035 #Gbps
**.switch*.eth[*].queuing.dropper.OutputLinkBandwidth= 1  #Gbps
####################################################################################################################################################
**.queues[0].expressQueue = false
**.queues[1].expressQueue = false
**.queues[2].expressQueue = false
**.queues[3].expressQueue = false
**.queues[4].expressQueue = false
**.queues[5].expressQueue = false
**.queues[6].expressQueue = false
**.queues[7].expressQueue = true

**.queues[*].bufferCapacity = 363360b

**.switchA.eth[*].mac.enablePreemptingFrames = true



########################################### IP addresses for Detnet trafficGen ######################################################################
# Packet Generating EndHosts
#**.priority0.trafGenSchedApp.destip="10.0.0.1"
#**.priority1.trafGenSchedApp.destip="10.0.0.2"
#**.priority2.trafGenQueueApp.destip="10.0.0.3"
#**.nonpriority0.trafGenQueueApp.destip="10.0.0.4"
#**.nonpriority1.trafGenQueueApp.destip="10.0.0.5"
####################################################################################################################################################






########################################### Ethernet and vlan  ###############################################################################
# MAC Addresses
#**.priority0.eth.address="00-00-00-00-00-01"
#**.priority1.eth.address="00-00-00-00-00-02"
#**.priority2.eth.address="00-00-00-00-00-03"
#**.nonpriority0.eth.address="00-00-00-00-00-04"
#**.nonpriority1.eth.address="00-00-00-00-00-05"

#**.priority0.trafGenSchedApp.vid = 1
#**.priority1.trafGenSchedApp.vid = 2
#**.priority2.trafGenSchedApp.vid = 3
######################################################
#**.priority0.eth[0].address="00-00-00-00-00-01"
#**.priority1.eth[0].address="00-00-00-00-00-02"
#**.priority2.eth[0].address="00-00-00-00-00-03"
#**.nonpriority0.eth[0].address="00-00-00-00-00-04"
#**.nonpriority1.eth[0].address="00-00-00-00-00-05"
#
#**.prioritysink0.eth[0].address="00-00-00-00-00-06"
#**.prioritysink1.eth[0].address="00-00-00-00-00-07"
#**.prioritysink2.eth[0].address="00-00-00-00-00-08"
#**.nonprioritysink0.eth[0].address="00-00-00-00-00-09"
#**.nonprioritysink1.eth[0].address="00-00-00-00-00-0a"
##########################################################

#**.nonprioritysink2.eth[0].address="00-00-00-00-00-0b"

#**.priority2.trafGenQueueApp.destAddress = "00-00-00-00-00-08"
#**.priority2.trafGenQueueApp.packetLength = 350Byte
#**.priority2.trafGenQueueApp.vlanTagEnabled = true
#**.priority2.trafGenQueueApp.pcp = 7
#**.priority2.trafGenQueueApp.vid = 3
#
#
#**.nonpriority0.trafGenQueueApp.destAddress = "00-00-00-00-00-09"
#**.nonpriority1.trafGenQueueApp.destAddress = "00-00-00-00-00-0a"
#**.nonpriority*.trafGenQueueApp.packetLength = 1400Byte-4Byte # MTU-Size - VLAN-Tag-Size
#**.nonpriority*.trafGenQueueApp.vlanTagEnabled = true
#**.nonpriority0.trafGenQueueApp.pcp = 6
#**.nonpriority0.trafGenQueueApp.vid = 5
#**.nonpriority1.trafGenQueueApp.pcp = 5
#**.nonpriority1.trafGenQueueApp.vid = 6

**.**.eth[*].vlanEncap.typename="VLAN8021qEncap"
**.**.eth[*].vlanEncap.vlanTagtype="c"
########################################################################################################################################################

#**.routerA.eth[0].address="00-00-00-00-00-0b"
#**.routerA.eth[1].address="00-00-00-00-00-0c"

**.router?.eth[*].ingressTC.typename = "TCA"
#**.router?.eth[*].etherEncap.typename = "EtherEncapDummy"
**.ingressTC.numClasses = 4
**.ingressTC.classifier.filters = xmldoc("filters.xml", "//experiment[@id='default']")
**.ingressTC.marker.dscps = "AF11 AF21 AF31 AF41 BE"

**.router?.eth[*].egressTC.typename = "detnetDiffserv"
**.egressTC.numClasses = 4
**.egressTC.DscpClassifier.dscps = "AF11 AF21 AF31 AF41"
**.egressTC.pfpc.ClassPerflowReservation0 = 0.05
**.egressTC.pfpc.ClassPerflowReservation1 = 0.05
**.egressTC.pfpc.ClassPerflowReservation2 = 1
**.egressTC.pfpc.ClassPerflowReservation3 = 0.05
**.egressTC.pcpMarker.MarkPcp0 = 6
**.egressTC.pcpMarker.MarkPcp1 = 5
**.egressTC.pcpMarker.MarkPcp2 = 4
**.egressTC.pcpMarker.MarkPcp3 = 3

######################################## HOSTS #####################################################################################################
**.H{0..4}.numApps = 1
# voice streaming
**.H{0..4}.app[0].typename = "UdpBasicApp"
**.H{0..4}.app[0].destPort = 1000
**.H{0..4}.app[0].startTime = 0s #uniform(0s,15us)
**.H{0..4}.app[0].stopTime = 1s

**.H{0..1}.app[0].sendInterval = 100us
**.H{0..1}.app[0].messageLength = 350B

**.H2.app[0].sendInterval = 3.4us
**.H2.app[0].messageLength = 350B

**.H{3..4}.app[0].sendInterval = 12us
**.H{3..4}.app[0].messageLength = 1400B - 4B

**.H{0..4}.numVlanInterfaces = 1
**.H{0..4}.vlan[*].typename = "DetnetVlanInterface"
**.H{0..4}.vlan[*].tunnel.vid = 1
**.H{0..2}.vlan[*].tunnel.pcp = 7
**.H{3..4}.vlan[*].tunnel.pcp = 6
**.H{0..4}.vlan[0].tunnel.realInterfaceName="eth0"
#*.configurator.config = xml("<config><interface hosts='**' address='10.0.0.x' netmask='255.255.255.x'/><route hosts='H*' destination='S*' netmask='255.255.255.255' interface='vlan0'/></config>")
*.configurator.config = xmldoc("config.xml")
**.H0.app[0].destAddresses = "S0"
**.H1.app[0].destAddresses = "S1"
**.H2.app[0].destAddresses = "S2"
**.H3.app[0].destAddresses = "S3"
**.H4.app[0].destAddresses = "S4"


#*.nonprioritysink0.numVlanInterfaces = 1
#*.nonprioritysink0.vlan[*].typename = "DetnetVlanInterface"
#*.nonprioritysink0.vlan[0].tunnel.vlanId = 42
#*.nonprioritysink0.vlan[0].tunnel.vid = 10
#*.nonprioritysink0.vlan[0].tunnel.pcp = 2
#*.nonprioritysink0.vlan[0].tunnel.realInterfaceName = "eth0"
#*.configurator.config = xml("<config><interface hosts='**' address='10.0.0.x' netmask='255.255.255.x'/><route hosts='nonprioritysink0' destination='10.0.0.1' netmask='255.255.255.255' interface='vlan0'/></config>")

########################################### Sinks ##########################################################################################################
# Sink EndHosts
**.S*.hasUdp = true
**.S*.numApps = 1
**.S*.app[0].typename = "UdpSink"
**.S*.app[0].localPort=1000
############################################################################################################################################################